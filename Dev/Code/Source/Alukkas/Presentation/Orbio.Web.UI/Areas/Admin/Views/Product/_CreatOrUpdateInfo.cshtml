@model Orbio.Web.UI.Areas.Admin.Models.Product.ProductModel
<div aria-labelledby="home-tab" id="productinfo" class="tab-pane fade in active  " role="tabpanel">
    <div class="description_area">
        <div class="row"><div class="col-md-2 prdct_name">Product Name :</div><div class="col-md-4">@Html.TextBoxFor(model => model.Name, new { @class = "prdct_name_txt",required="required" })</div></div>
        <div class="row"><div class="col-md-2 prdct_name">Short Description :</div><div class="col-md-4">@Html.TextAreaFor(model => model.ShortDescription, new { @class = "short_description_txt_area",required="required" })</div></div>
        <div class="row">
            <div class="col-md-2 prdct_name">Full Description :</div><div class="col-md-8">
                @Html.TextAreaFor(model => model.FullDescription, new { @class = "short_description_txt_area", ength="0", cols="20", id="FullDescription",rows="2" })
                @*<textarea class="short_description_txt_area" ength="0" cols="20" id="FullDescription" name="FullDescription" rows="2" aria-hidden="true"></textarea>*@
            </div>
        </div>
    </div>
    <div class="admin_comment">
        <div class="row"><div class="col-md-3 prdct_name">Admin Comment :</div><div class="col-md-4">@Html.TextBoxFor(model => model.AdminComment, new { @class = "prdct_name_txt" })</div></div>
        <div class="row">
            <div class="col-md-3 prdct_name">Show on home page :</div><div class="col-md-1 less_width">@Html.CheckBoxFor(model => model.ShowOnHomePage, new { @class = "show_on_homepage_check" })</div>
            <div class="col-md-2 allow_reviews">Allow customer reviews :</div><div class="col-md-1">@Html.CheckBoxFor(model => model.AllowCustomerReviews, new { @class = "show_on_homepage_check" })</div>
        </div>
        <div class="row"><div class="col-md-3 prdct_name" style="padding-top:6px">Product tags :</div><div class="col-md-4">@Html.TextBoxFor(model => model.ProductTags, new { @class = "prdct_name_txt" })</div></div>
        <div class="row"><div class="col-md-3 prdct_name"> SKU :</div><div class="col-md-4">@Html.TextBoxFor(model => model.Sku, new { @class = "prdct_name_txt" })</div></div>

        <div class="break_border"></div>
        <div class="row"><div class="col-md-3 prdct_name">Price :</div><div class="col-md-4">@Html.TextBoxFor(model => model.Price, new { @class = "prdct_name_txt", type = "number",required="required" })</div></div>
        <div class="row"><div class="col-md-3 prdct_name">Product cost:</div><div class="col-md-4">@Html.TextBoxFor(model => model.ProductCost, new { @class = "prdct_name_txt", type = "number", required = "required" })</div></div>
        <div class="row"><div class="col-md-3 prdct_name">Special price:</div><div class="col-md-4">@Html.TextBoxFor(model => model.SpecialPrice, new { @class = "prdct_name_txt", type = "number" })</div></div>
        <div class="row"><div class="col-md-3 prdct_name">Special price start date:</div><div class="col-md-4">@Html.TextBoxFor(model => model.SpecialPriceStartDateTimeUtc, new { @class = "prdct_name_txt" })</div></div>
        <div class="row"><div class="col-md-3 prdct_name">Special price end date:</div><div class="col-md-4">@Html.TextBoxFor(model => model.SpecialPriceEndDateTimeUtc, new { @class = "prdct_name_txt" })</div></div>

        <div class="row"><div class="col-md-3 prdct_name">Product Unit:</div><div class="col-md-4">@Html.TextBoxFor(model => model.ProductUnit, new { @class = "prdct_name_txt", type = "number" })</div></div>

        <div class="break_border"></div>
        <div class="row"><div class="col-md-3 prdct_name">Shipping enabled :</div><div class="col-md-1 less_width">@Html.CheckBoxFor(model => model.IsShipEnabled, new { @class = "show_on_homepage_check enabling" })</div></div>

        <div class="show_div_check_true" style="display:none">
            <div class="row"><div class="col-md-3 prdct_name">Free Shipping :</div><div class="col-md-4">@Html.CheckBoxFor(model => model.IsFreeShipping, new { @class = "show_on_homepage_check" })</div></div>
            <div class="row">
                <div class="col-md-3 prdct_name">Additional shipping charge :</div><div class="col-md-4 ">@Html.TextBoxFor(model => model.AdditionalShippingCharge, new { @class = "prdct_name_txt", type = "number" })</div>
            </div>
            <div class="row"><div class="col-md-3 prdct_name">Net Weight :</div><div class="col-md-4">@Html.TextBoxFor(model => model.Weight, new { @class = "prdct_name_txt", type = "number" })</div></div>
            <div class="row"><div class="col-md-3 prdct_name">Width :</div><div class="col-md-4">@Html.TextBoxFor(model => model.Width, new { @class = "prdct_name_txt", type = "number" })</div></div>
            <div class="row"><div class="col-md-3 prdct_name">Height :</div><div class="col-md-4">@Html.TextBoxFor(model => model.Height, new { @class = "prdct_name_txt", type = "number" })</div></div>
            <div class="row"><div class="col-md-3 prdct_name">Delivery date :</div><div class="col-md-2">@Html.DropDownList("DeliveryDateId", Model.AvailableDeliveryDates, new { @class = "virtual_select_class" })</div></div>
            <div class="row"><div class="col-md-3 prdct_name">Ware house :</div><div class="col-md-2">@Html.DropDownList("WarehouseId", Model.AvailableWarehouses, new { @class = "virtual_select_class" })</div></div>
        </div>

        <div class="break_border"></div>

        <div class="row"><div class="col-md-3 prdct_name">Text exempt :</div><div class="col-md-1">@Html.CheckBoxFor(model => model.IsTaxExempt, new { @class = "show_on_homepage_check enablingTax" })</div></div>
        <div id="taxcat" class="row" style="display:none">
            <div class="col-md-3 prdct_name">Product Type :</div>
            <div class="col-md-3">
                @Html.DropDownList("TaxCategoryId", Model.AvailableTaxCategories, new { @class = "virtual_select_class" })
            </div>
        </div>
        <div class="break_border"></div>

         <div class="row">
            <div class="col-md-3 prdct_name">Manage inventry method :</div>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.ManageInventoryMethodId, from Orbio.Core.Domain.Catalog.ManageInventoryMethod manageInventoryMethod in Enum.GetValues(typeof(Orbio.Core.Domain.Catalog.ManageInventoryMethod))
                                                                              select new SelectListItem() { Text = manageInventoryMethod.ToString(), Value = ((int)manageInventoryMethod).ToString() }, new { @class = "donttrack enablingInv" })
            </div>
        </div>
        <div id="trackInv" class="row" style="display:none">
            <div class="row"><div class="col-md-3 prdct_name" style="padding-top:6px">Stock quantity:</div><div class="col-md-4">@Html.TextBoxFor(model => model.StockQuantity, new { @class = "prdct_name_txt", type = "number" })</div></div>
            <div class="row"><div class="col-md-3 prdct_name">Display stock availability:</div><div class="col-md-4">@Html.CheckBoxFor(model => model.DisplayStockAvailability, new { @class = "show_on_homepage_check" })</div></div>
            <div class="row"><div class="col-md-3 prdct_name" style="padding-top:6px">Minimum stock quantity:</div><div class="col-md-4">@Html.TextBoxFor(model => model.MinStockQuantity, new { @class = "prdct_name_txt" })</div></div>
            <div class="row"><div class="col-md-3 prdct_name">Low stock activity:</div><div class="col-md-4">
                @Html.DropDownListFor(model => model.LowStockActivityId, from Orbio.Core.Domain.Catalog.LowStockActivity lowStockActivity in Enum.GetValues(typeof(Orbio.Core.Domain.Catalog.LowStockActivity))
                                                                                                                                                     select new SelectListItem() { Text = lowStockActivity.ToString(), Value = ((int)lowStockActivity).ToString() }, new { @class = "donttrack" })
        </div></div>
        <div class="row"><div class="col-md-3 prdct_name" style="padding-top:6px">Notify admin for quantity below:</div><div class="col-md-4">@Html.TextBoxFor(model => model.NotifyAdminForQuantityBelow, new { @class = "prdct_name_txt", type = "number" })</div></div>

        <div class="row"><div class="col-md-3 prdct_name">Backorders:</div><div class="col-md-4">
            @Html.DropDownListFor(model => model.BackorderModeId, from Orbio.Core.Domain.Catalog.BackorderModel backorderModel in Enum.GetValues(typeof(Orbio.Core.Domain.Catalog.BackorderModel))
                                                                      select new SelectListItem() { Text = backorderModel.ToString(), Value = ((int)backorderModel).ToString() }, new { @class = "donttrack" })

        </div></div>
    </div>

            <div class="row"><div class="col-md-3 prdct_name">Minimum cart quantity:</div><div class="col-md-4">@Html.TextBoxFor(model => model.OrderMinimumQuantity, new { @class = "prdct_name_txt", type = "number" })</div></div>
            <div class="row"><div class="col-md-3 prdct_name">Minimum cart quantity:</div><div class="col-md-4">@Html.TextBoxFor(model => model.OrderMaximumQuantity, new { @class = "prdct_name_txt", type = "number" })</div></div>
            <div class="row"><div class="col-md-3 prdct_name">Allowed quantities:</div><div class="col-md-4">@Html.TextBoxFor(model => model.AllowedQuantities, new { @class = "prdct_name_txt" })</div></div>

            <div class="break_border"></div>

            <div class="row"><div class="col-md-3 prdct_name">Available start date:</div><div class="col-md-4">@Html.TextBoxFor(model => model.AvailableStartDateTimeUtc, new { @class = "prdct_name_txt" })</div></div>
            <div class="row"><div class="col-md-3 prdct_name">Available  end date:</div><div class="col-md-4">@Html.TextBoxFor(model => model.AvailableEndDateTimeUtc, new { @class = "prdct_name_txt" })</div></div>

            <div class="row"><div class="col-md-3 prdct_name">Published :</div><div class="col-md-1">@Html.CheckBoxFor(model => model.Published, new { @class = "show_on_homepage_check" })</div></div>

            @*@if (Model.CreatedOnUtc != null)
            { <p class="created_on_para">Created on: @Html.Label("CreatedOnUtc", Model.CreatedOnUtc)</p>}
            @if (Model.UpdatedOnUtc != null)
            { <p class="created_on_para">Updated on: @Html.Label("UpdatedOnUtc", Model.UpdatedOnUtc)</p> }*@

        </div>

</div>
