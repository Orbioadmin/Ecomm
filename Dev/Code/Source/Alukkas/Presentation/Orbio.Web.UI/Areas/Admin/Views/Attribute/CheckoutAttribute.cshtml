@model Orbio.Web.UI.Areas.Admin.Models.Attribute.CheckoutAttributeModel

@using Orbio.Core.Domain.Admin.Catalog;

<div class="tab-content">
    <div role="tabpanel" class="tab-pane in active" id="standard">
        <div class="col-md-12 product-specification1">
            @Html.HiddenFor(m => m.Id, new { Value=Model.Id })
            <div class="col-md-3"><label> Name:</label></div>
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.Name, new { @class = "produtxt", required = "required" })
            @*<input type="text" class="produtxt">*@
            </div>
        </div>
        <div class="col-md-12 product-specification1">
            <div class="col-md-3"><label> Text Prompt:</label></div>
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.TextPrompt, new { @class = "produtxt" })
            @*<input type="text" class="produtxt">*@
            </div>
        </div>

        <div class="col-md-12 product-specification1">
            <div class="col-md-3"><label> Required:</label></div>
            <div class="col-md-3">
                @Html.CheckBoxFor(m=>m.IsRequired)
            @*<input type="checkbox" class="">*@
            </div>
        </div>
        <div class="col-md-12 product-specification1">
            <div class="col-md-3"><label> Shipable Product Required:</label></div>
            <div class="col-md-3">
                @Html.CheckBoxFor(m => m.ShippableProduct)
            @*<input type="checkbox" class="">*@
            </div>
        </div>
        <div class="col-md-12 product-specification1">
            <div class="col-md-3"><label> Tax Exempt:</label></div>
            <div class="col-md-3">
                @Html.CheckBoxFor(m => m.IsTaxExempt, new { onchange="taxcategory()",id="taxexempt"})
                @*<input type="checkbox" class="">*@
            </div>
        </div>
        <div class="col-md-12 product-specification1" id="taxcat">
            <div class="col-md-3"><label> Tax Category:</label></div>
            <div class="col-md-3">@Html.DropDownListFor(m => m.TaxCategoryId, new SelectList(Model.TaxCategory, "Id", "Name"), new { @class = "jewellery produtxt" })
            @*<select class="jewellery produtxt"><option></option></select>*@
            </div>
        </div>
        <div class="col-md-12 product-specification1">
            <div class="col-md-3"><label> Control Type:</label></div>
            <div class="col-md-3">@Html.DropDownListFor(m => m.ControlTypeId, from AttributeControlType controlType in Enum.GetValues(typeof(AttributeControlType))
                                                                              select new SelectListItem() { Text = controlType.ToString(), Value = ((int)controlType).ToString() }, new { @class = "jewellery produtxt" })</div>
        </div>
        <div class="col-md-12 product-specification1">
            <div class="col-md-3"><label> Display Order:</label></div>
            <div class="col-md-3">@Html.TextBoxFor(m => m.DisplayOrder, new { @class="Produtxt",@type="number" })</div>
        </div>
    </div>
</div>

<script>
    function taxcategory()
    {
        var val = document.getElementById("taxexempt").value;
        if(val)
        {
            document.getElementById("taxcat").style.display = none;
        }
        else {
            document.getElementById("taxcat").style.display = block;
        }
    }
</script>
